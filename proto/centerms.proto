syntax = "proto3";

package proto;

import "github.com/mwitkow/go-proto-validators/validator.proto";

// Event is used for NATS pub/sub.
message Event {
    string aggregate_id = 1 [(validator.field) = {string_not_empty: true}];
    string aggregate_type = 2 [(validator.field) = {string_not_empty: true}];
    string event_id = 3 [(validator.field) = {string_not_empty: true}];
    string event_type = 4 [(validator.field) = {string_not_empty: true}];
    string event_data = 5 [(validator.field) = {string_not_empty: true}];
}

enum Status {
    UNDEFINED = 0;
    OK = 1;
    FAILED = 2;
}

service CenterService {
    rpc GetInitCfg(GetInitCfgRequest) returns (GetInitCfgResponse) {}
    rpc SaveData(SaveDataRequest) returns (SaveDataResponse) {}
}

message GetInitCfgRequest {
    int64 time = 1 [(validator.field) = {msg_exists : true}];
    string mac = 2 [(validator.field) = {string_not_empty: true}];
    string type = 3 [(validator.field) = {string_not_empty: true}];
}
message GetInitCfgResponse {
    bytes cfg = 1 [(validator.field) = {msg_exists : true}];
}

message SaveDataRequest {
    int64 time = 1 [(validator.field) = {msg_exists : true}];
    string mac = 2 [(validator.field) = {string_not_empty: true}];
    string type = 3 [(validator.field) = {string_not_empty: true}];
    bytes data = 4 [(validator.field) = {msg_exists : true}];
}

message SaveDataResponse {
    Status status = 1 [(validator.field) = {is_in_enum : true}];
}
